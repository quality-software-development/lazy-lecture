/* eslint-disable */
/// <reference types="cypress" />

import { generateLatinUsername } from '../support/utils';

const uniqueUser = generateLatinUsername();

describe('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π + –∞–≤—Ç–æ‚Äë–ª–æ–≥–∏–Ω (—Ä–µ–∞–ª—å–Ω—ã–π API)', () => {
  beforeEach(() => {
    cy.hashVisit('/sign_up');

    cy.get('[data-test="ui-testing-auth-page-login-input"]', { timeout: 10000 }).should('exist');
    cy.get('[data-test="ui-testing-auth-page-password-input"]', { timeout: 10000 }).should('exist');
  });

  it('–®–∞–≥ 2: –ü—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear()
      .type('someuser');

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear(); // –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .parents('.q-field')
      .find('.q-field__messages')
      .should('contain.text', '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
  });

  it('–®–∞–≥ 3: –ü—É—Å—Ç–æ–π –ª–æ–≥–∏–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω"', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear();

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear()
      .type('GoodP@ss123');

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .parents('.q-field')
      .find('.q-field__messages')
      .should('contain.text', '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω');
  });

  it('–®–∞–≥ 4: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å ‚Äî –æ—à–∏–±–∫–∞ –≤ —Ç—É–ª—Ç–∏–ø–µ', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear()
      .type('ValidLogin');

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear()
      .type('short');

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.contains('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.')
      .should('be.visible')
      .realHover();

    cy.get('.q-tooltip')
      .should('exist')
      .invoke('text')
      .should('include', 'Password must be 8-256 characters');
  });

  it('–®–∞–≥ 5: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ª–æ–≥–∏–Ω ‚Äî –æ—à–∏–±–∫–∞ –≤ —Ç—É–ª—Ç–∏–ø–µ', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear()
      .type('ru'); // –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –ª–æ–≥–∏–Ω

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear()
      .type('GoodP@ss123');

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.contains('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.')
      .should('be.visible')
      .realHover();

    cy.get('.q-tooltip')
      .should('exist')
      .invoke('text')
      .should('include', 'Username must consist');
  });

  it('–®–∞–≥ 6: –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ‚Äë–ª–æ–≥–∏–Ω', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear()
      .type(uniqueUser);

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear()
      .type('GoodP@ss123456#Aa');

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.url({ timeout: 10000 }).should('include', '/transcripts');
  });

  it('–®–∞–≥ 7: –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—â–∏—â—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã', () => {
    cy.get('[data-test="ui-testing-auth-page-login-input"]')
      .clear()
      .type(generateLatinUsername());

    cy.get('[data-test="ui-testing-auth-page-password-input"]')
      .clear()
      .type('GoodP@ss123456#Aa');

    cy.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();

    cy.log('‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /transcripts');
    cy.url({ timeout: 10000 }).should('include', '/transcripts');

    cy.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—â–∏—â—ë–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    cy.hashVisit('/transcripts');

    cy.log('‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ /transcripts');
    cy.url({ timeout: 10000 }).should('include', '/transcripts');
  });

  it('–®–∞–≥ 8: –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ª–æ–≥–∏–Ω–æ–º ‚Äî –æ—à–∏–±–∫–∞', () => {
    const takenUsername = 'existingUser';

    // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ —é–∑–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π "—É–∂–µ –µ—Å—Ç—å"
    cy.get('[data-test="ui-testing-auth-page-login-input"]').clear().type(uniqueUser);
    cy.get('[data-test="ui-testing-auth-page-password-input"]').clear().type('GoodP@ss123');

    // –ú–æ–∫–∞–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî 400 Bad Request
    cy.intercept('POST', '**/auth/register', {
      statusCode: 400,
      body: { detail: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' }
    }).as('registerFail');

    cy.get('[data-test="ui-testing-auth-page-submit-btn"]').click();
    cy.wait('@registerFail');

    cy.contains('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.').should('be.visible').realHover();
    cy.get('.q-tooltip').should('contain.text', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  });
});
