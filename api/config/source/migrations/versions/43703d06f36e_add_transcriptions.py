"""add: transcriptions

Revision ID: 43703d06f36e
Revises: ea82a03addfc
Create Date: 2024-12-01 15:45:45.511078

"""
from alembic import op
import sqlalchemy as sa
from enum import Enum


class TranscriptionState(str, Enum):
    # start
    QUEUED = "queued"

    # intermediate
    IN_PROGRESS = "in_progress"
    PROCESSING_ERROR = "processing_error"

    # final
    COMPLETED = "completed"
    COMPLETED_PARTIALLY = "completed_partially"
    PROCESSING_FAIL = "processing_fail"
    CANCELLED = "cancelled"


# revision identifiers, used by Alembic.
revision = "43703d06f36e"
down_revision = "ea82a03addfc"  # pragma: allowlist secret
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Transcription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.Column("update_date", sa.DateTime(), nullable=True),
        sa.Column("audio_len_secs", sa.Float(), nullable=False),
        sa.Column("chunk_size_secs", sa.Float(), nullable=False),
        sa.Column("current_state", sa.Enum(TranscriptionState, name="transcriptionstate"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.ForeignKeyConstraint(["creator_id"], ["User.id"], name="fk_transcription_creator"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Transcription")
    # ### end Alembic commands ###
