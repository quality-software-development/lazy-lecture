# templates/postgres-deployment.yaml
{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lazy-lecture.fullname" . }}-postgres
  labels:
    {{- include "lazy-lecture.labels" . | nindent 4 }}
    app: "postgres"
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: "{{ include "lazy-lecture.fullname" . }}-postgres-secret"
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ include "lazy-lecture.fullname" . }}-postgres-secret"
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ include "lazy-lecture.fullname" . }}-postgres-secret"
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - pg_isready
            initialDelaySeconds: {{ .Values.postgres.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgres.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.postgres.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.postgres.healthCheck.failureThreshold }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "lazy-lecture.fullname" . }}-postgres-pvc
{{- end }}
