# templates/rabbitmq-deployment.yaml
{{- if .Values.rabbitmq.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lazy-lecture.fullname" . }}-rabbitmq
  labels:
    {{- include "lazy-lecture.labels" . | nindent 4 }}
    app: "rabbitmq"
spec:
  replicas: {{ .Values.rabbitmq.replicaCount }}
  selector:
    matchLabels:
      app: "rabbitmq"
  template:
    metadata:
      labels:
        app: "rabbitmq"
    spec:
      containers:
        - name: rabbitmq
          image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - containerPort: 5672
            - containerPort: 15672
            - containerPort: 15692
          env:
            - name: RMQ_USER
              value: "{{ .Values.rabbitmq.env.RMQ_USER }}"
            - name: RMQ_PASS
              value: "{{ .Values.rabbitmq.env.RMQ_PASS }}"
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-conf
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
          resources:
            limits:
              cpu: "{{ .Values.rabbitmq.resources.limits.cpu }}"
              memory: "{{ .Values.rabbitmq.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.rabbitmq.resources.requests.cpu }}"
              memory: "{{ .Values.rabbitmq.resources.requests.memory }}"
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: {{ include "lazy-lecture.fullname" . }}-rabbitmq-pvc
        - name: rabbitmq-conf
          configMap:
            name: {{ include "lazy-lecture.fullname" . }}-rabbitmq-conf
{{- end }}
